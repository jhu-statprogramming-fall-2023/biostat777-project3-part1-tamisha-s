[{"path":"/CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behavior participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behavior may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http:contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Bob Rudis. Author, maintainer. Dave Gandy. Author.            Font Awesome Andrew Breza. Contributor. Matthias Jütte. Contributor. Paul Campbell. Contributor.            geom_bar flip","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Rudis B, Gandy D (2023). waffle: Create Waffle Chart Visualizations. R package version 1.0.2.","code":"@Manual{,   title = {waffle: Create Waffle Chart Visualizations},   author = {Bob Rudis and Dave Gandy},   year = {2023},   note = {R package version 1.0.2}, }"},{"path":[]},{"path":"/reference/draw_key_pictogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Legend builder for pictograms — draw_key_pictogram","title":"Legend builder for pictograms — draw_key_pictogram","text":"Legend builder pictograms","code":""},{"path":"/reference/draw_key_pictogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Legend builder for pictograms — draw_key_pictogram","text":"","code":"draw_key_pictogram(data, params, size)"},{"path":"/reference/draw_key_pictogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Legend builder for pictograms — draw_key_pictogram","text":"data, params, size legend key things","code":""},{"path":"/reference/fa5_brand.html","id":null,"dir":"Reference","previous_headings":"","what":"Font Awesome 5 Brand — fa5_brand","title":"Font Awesome 5 Brand — fa5_brand","text":"`fa5_brand` shorthand \"`FontAwesome5Brands-Regular`\"","code":""},{"path":"/reference/fa5_brand.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Font Awesome 5 Brand — fa5_brand","text":"","code":"fa5_brand"},{"path":"/reference/fa5_brand.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Font Awesome 5 Brand — fa5_brand","text":"object class character length 1.","code":""},{"path":"/reference/fa5_solid.html","id":null,"dir":"Reference","previous_headings":"","what":"Font Awesome 5 Solid — fa5_solid","title":"Font Awesome 5 Solid — fa5_solid","text":"`fa5_solid` shorthand \"`FontAwesome5Free-Solid`\"","code":""},{"path":"/reference/fa5_solid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Font Awesome 5 Solid — fa5_solid","text":"","code":"fa5_solid"},{"path":"/reference/fa5_solid.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Font Awesome 5 Solid — fa5_solid","text":"object class character length 1.","code":""},{"path":"/reference/fa_grep.html","id":null,"dir":"Reference","previous_headings":"","what":"Search Font Awesome glyph names for a pattern — fa_grep","title":"Search Font Awesome glyph names for a pattern — fa_grep","text":"Search Font Awesome glyph names pattern","code":""},{"path":"/reference/fa_grep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search Font Awesome glyph names for a pattern — fa_grep","text":"","code":"fa_grep(pattern)"},{"path":"/reference/fa_grep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search Font Awesome glyph names for a pattern — fa_grep","text":"pattern pattern search names Font Awesome fonts","code":""},{"path":"/reference/fa_list.html","id":null,"dir":"Reference","previous_headings":"","what":"List all Font Awesome glyphs — fa_list","title":"List all Font Awesome glyphs — fa_list","text":"List Font Awesome glyphs","code":""},{"path":"/reference/fa_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List all Font Awesome glyphs — fa_list","text":"","code":"fa_list()"},{"path":"/reference/geom_pictogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Pictogram Geom — geom_pictogram","title":"Pictogram Geom — geom_pictogram","text":"two special/critical aes() mappings: label (geom knows column map glyphs ) values (column mapping filling squares )","code":""},{"path":"/reference/geom_pictogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pictogram Geom — geom_pictogram","text":"","code":"geom_pictogram(   mapping = NULL,   data = NULL,   n_rows = 10,   make_proportional = FALSE,   flip = FALSE,   ...,   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE )  GeomPictogram"},{"path":"/reference/geom_pictogram.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pictogram Geom — geom_pictogram","text":"object class GeomPictogram (inherits GeomText, Geom, ggproto, gg) length 5.","code":""},{"path":"/reference/geom_pictogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pictogram Geom — geom_pictogram","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame., used layer data. n_rows many rows waffle chart? default 10 make_proportional compute proportions raw values? (.e. value n replaced n/sum(n)); default FALSE. flip TRUE, flip x y coords. n_rows becomes n_cols. Useful achieve waffle column chart effect. Defaults FALSE. ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders().","code":""},{"path":"/reference/geom_waffle.html","id":null,"dir":"Reference","previous_headings":"","what":"Waffle (Square pie chart) Geom — geom_waffle","title":"Waffle (Square pie chart) Geom — geom_waffle","text":"two special/critical aes() mappings: fill (geom knows column map fills ) values (column mapping filling squares )","code":""},{"path":"/reference/geom_waffle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Waffle (Square pie chart) Geom — geom_waffle","text":"","code":"geom_waffle(   mapping = NULL,   data = NULL,   n_rows = 10,   make_proportional = FALSE,   flip = FALSE,   na.rm = FALSE,   show.legend = NA,   radius = grid::unit(0, \"npc\"),   inherit.aes = TRUE,   ... )  GeomWaffle  stat_waffle(   mapping = NULL,   data = NULL,   geom = \"waffle\",   n_rows = 10,   make_proportional = FALSE,   flip = FALSE,   radius = grid::unit(0, \"npc\"),   na.rm = FALSE,   show.legend = NA,   inherit.aes = TRUE,   ... )  StatWaffle"},{"path":"/reference/geom_waffle.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Waffle (Square pie chart) Geom — geom_waffle","text":"object class GeomWaffle (inherits GeomRtile, GeomRrect, Geom, ggproto, gg) length 5. object class StatWaffle (inherits Stat, ggproto, gg) length 8.","code":""},{"path":"/reference/geom_waffle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Waffle (Square pie chart) Geom — geom_waffle","text":"mapping Set aesthetic mappings created aes() aes_(). specified inherit.aes = TRUE (default), combined default mapping top level plot. must supply mapping plot mapping. data data displayed layer. three options: NULL, default, data inherited plot data specified call ggplot(). data.frame, object, override plot data. objects fortified produce data frame. See fortify() variables created. function called single argument, plot data. return value must data.frame., used layer data. n_rows many rows waffle chart? default 10 make_proportional compute proportions raw values? (.e. value n replaced n/sum(n)); default FALSE. flip TRUE, flip x y coords. n_rows becomes n_cols. Useful achieve waffle column chart effect. Defaults FALSE. na.rm FALSE, default, missing values removed warning. TRUE, missing values silently removed. show.legend logical. layer included legends? NA, default, includes aesthetics mapped. FALSE never includes, TRUE always includes. can also named logical vector finely select aesthetics display. radius radius round squares inherit.aes FALSE, overrides default aesthetics, rather combining . useful helper functions define data aesthetics inherit behaviour default plot specification, e.g. borders(). ... arguments passed layer(). often aesthetics, used set aesthetic fixed value, like color = \"red\" size = 3. may also parameters paired geom/stat. geom geom use (default \"waffle\")","code":""},{"path":"/reference/geom_waffle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Waffle (Square pie chart) Geom — geom_waffle","text":"","code":"data.frame(   parts = factor(rep(month.abb[1:3], 3), levels=month.abb[1:3]),   vals = c(10, 20, 30, 6, 14, 40, 30, 20, 10),   fct = c(rep(\"Thing 1\", 3), rep(\"Thing 2\", 3), rep(\"Thing 3\", 3)) ) -> xdf  ggplot(xdf, aes(fill = parts, values = vals)) +   geom_waffle() +   facet_wrap(~fct)"},{"path":"/reference/install_fa_fonts.html","id":null,"dir":"Reference","previous_headings":"","what":"Install Font Awesome 5 Fonts — install_fa_fonts","title":"Install Font Awesome 5 Fonts — install_fa_fonts","text":"Install Font Awesome 5 Fonts","code":""},{"path":"/reference/install_fa_fonts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Install Font Awesome 5 Fonts — install_fa_fonts","text":"","code":"install_fa_fonts()"},{"path":"/reference/iron.html","id":null,"dir":"Reference","previous_headings":"","what":"Veritical, left-aligned layout for waffle plots — iron","title":"Veritical, left-aligned layout for waffle plots — iron","text":"Left-align waffle plots x-axis. Use pad parameter waffle pad plot max width (num squares), otherwise plots scaled.","code":""},{"path":"/reference/iron.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Veritical, left-aligned layout for waffle plots — iron","text":"","code":"iron(...)"},{"path":"/reference/iron.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Veritical, left-aligned layout for waffle plots — iron","text":"... one waffle plots","code":""},{"path":"/reference/iron.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Veritical, left-aligned layout for waffle plots — iron","text":"","code":"parts <- c(80, 30, 20, 10) w1 <- waffle(parts, rows=8) w2 <- waffle(parts, rows=8) w3 <- waffle(parts, rows=8) # print chart ## iron(w1, w2, w3)"},{"path":"/reference/scale_label_pictogram.html","id":null,"dir":"Reference","previous_headings":"","what":"Used with geom_pictogram() to map Font Awesome fonts to labels — scale_label_pictogram","title":"Used with geom_pictogram() to map Font Awesome fonts to labels — scale_label_pictogram","text":"Used geom_pictogram() map Font Awesome fonts labels","code":""},{"path":"/reference/scale_label_pictogram.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Used with geom_pictogram() to map Font Awesome fonts to labels — scale_label_pictogram","text":"","code":"scale_label_pictogram(..., values, aesthetics = \"label\")"},{"path":"/reference/scale_label_pictogram.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Used with geom_pictogram() to map Font Awesome fonts to labels — scale_label_pictogram","text":"... dots values values aesthetics aesthetics","code":""},{"path":"/reference/theme_enhance_waffle.html","id":null,"dir":"Reference","previous_headings":"","what":"Waffle chart theme cruft remover that can be used with any other theme — theme_enhance_waffle","title":"Waffle chart theme cruft remover that can be used with any other theme — theme_enhance_waffle","text":"Removes:","code":""},{"path":"/reference/theme_enhance_waffle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Waffle chart theme cruft remover that can be used with any other theme — theme_enhance_waffle","text":"","code":"theme_enhance_waffle()"},{"path":"/reference/theme_enhance_waffle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Waffle chart theme cruft remover that can be used with any other theme — theme_enhance_waffle","text":"panel grid axis text axis ticks axis titles","code":""},{"path":"/reference/waffle-package.html","id":null,"dir":"Reference","previous_headings":"","what":"A package to make waffle charts (square pie charts) in R. — waffle-package","title":"A package to make waffle charts (square pie charts) in R. — waffle-package","text":"glyphs: Font Awesome Dave Gandy - http://fontawesome.io License: SIL OFL 1.1 URL: http://scripts.sil.org/OFL","code":""},{"path":"/reference/waffle.html","id":null,"dir":"Reference","previous_headings":"","what":"Make waffle (square pie) charts — waffle","title":"Make waffle (square pie) charts — waffle","text":"Given named vector data frame, function return ggplot object represents waffle chart values. individual values summed total number squares grid. can perform appropriate value transformation ahead time get desired waffle layout/effect.","code":""},{"path":"/reference/waffle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make waffle (square pie) charts — waffle","text":"","code":"waffle(   parts,   rows = 10,   keep = TRUE,   xlab = NULL,   title = NULL,   colors = NA,   size = 2,   flip = FALSE,   reverse = FALSE,   equal = TRUE,   pad = 0,   use_glyph = FALSE,   glyph_size = 12,   glyph_font = \"Font Awesome 5 Free Solid\",   glyph_font_family = \"FontAwesome5Free-Solid\",   legend_pos = \"right\" )"},{"path":"/reference/waffle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make waffle (square pie) charts — waffle","text":"parts named vector values data frame use chart rows number rows blocks keep keep factor levels (.e. consistent legends across waffle plots) xlab text chart. Highly suggested used give \"1 sq == xyz\" relationship obvious title chart title colors exactly number colors values parts. omitted, Color Brewer \"Set2\" colors used. size width separator blocks (defaults 2) flip flips x & y axes reverse reverses order data equal default, waffle uses coord_equal; can cause layout problems, use disable using ggsave knitr control output sizes (manually sizing chart) pad many blocks right-pad grid use_glyph use specified glyph; using built-Font Awesome, can glyph name; otherwise, must unicode glyph custom font caller using. glyph_size size Font Awesome font glyph_font, glyph_font_family use_glyph FALSE, gplyph_font looked font database glpyph_font_family used family parameter ggplot font display since fonts R, Python anythign relies legacy font C libraries woefully messed . may need adjust either \"font\" parameters depending system & OS version due fact font names different even OS versions (sometimes). package comes Font Awesome helpers . Use fonts requires caller familiar using fonts R. FONTS work ggplot2 definitely graphics devices ggplot2. legend_pos position legend","code":""},{"path":"/reference/waffle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Make waffle (square pie) charts — waffle","text":"data frame used, first two columns contain desired names values, respectively. vector named partially named, capital letters used instead. highly suggested limit number elements plot, just like ever got wasted decided regular pie chart good thing create decide totally evil make one pollute beautiful world . Chart title x-axis labels optional, especially just exporting another program use/display. specify string (vs FALSE) use_glyph function map input Font Awesome glyph name use glyph tile instead block (making like isotype pictogram waffle chart). need install Font Awesome 5 use extrafont package able use Font Awesome 5 glyphs. Sizing also user since fonts automatically scale graphic resize. Glyph idea inspired Ruben C. Arslan (@_r_c_a)","code":""},{"path":"/reference/waffle.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Make waffle (square pie) charts — waffle","text":"MUST use Font Awesome 5 fonts bundled package. See install_fa_fonts().","code":""},{"path":"/reference/waffle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make waffle (square pie) charts — waffle","text":"","code":"parts <- c(80, 30, 20, 10) waffle(parts, rows=8)   parts <- data.frame(   names = LETTERS[1:4],   vals = c(80, 30, 20, 10) )  waffle(parts, rows=8)   # library(extrafont) # waffle(parts, rows=8, use_glyph=\"shield\")  parts <- c(One=80, Two=30, Three=20, Four=10) chart <- waffle(parts, rows=8) # print(chart)"}]
